// commands/help.rs
pub fn print_help() {
    println!(
        "\nðŸ“Œ Rust GCloud Shell - Help Guide\n\nAvailable Commands:\n  ðŸ”¹ set_defaults [project=name] [region=name] [zone=name]\n      - Sets default project, region, and zone. \nDefault values: project=my-default-project, region=us-central1, zone=us-central1-a\n\n  ðŸ”¹ create_instance [instance=name] [machine_type=type]\n      - Creates a VM instance. \nDefault values: instance=my-instance, machine_type=n1-standard-1\n\n  ðŸ”¹ create_cluster [cluster=name] [num_nodes=n] [min_nodes=n] [max_nodes=n]\n      - Creates a Kubernetes cluster with autoscaling. \nDefault values: cluster=my-cluster, num_nodes=3, min_nodes=1, max_nodes=5\n\n  ðŸ”¹ create_network [network=name] [firewall_rule=name]\n      - Creates a VPC network and allows HTTP traffic. \nDefault values: network=my-network, firewall_rule=allow-http\n\n  ðŸ”¹ add_iam_policy [member=email] [role=role]\n      - Adds an IAM policy binding. \nDefault values: member=user:example@example.com, role=roles/viewer\n\n  ðŸ”¹ remove_iam_policy [member=email] [role=role]\n      - Removes an IAM policy binding. \nDefault values: member=user:example@example.com, role=roles/viewer\n\n  ðŸ”¹ set_iam_policy [policy_file=filename]\n      - Sets an IAM policy from a JSON file. Default value: policy_file=policy.json\n\n  ðŸ”¹ deploy_app [project=name] [version=name]\n      - Deploys an application with a specified version. \nDefault values: project=my-default-project, version=v1\n\n  ðŸ”¹ exit\n      - Exits the shell.\n\n  ðŸ”¹ help\n      - Displays this help message."
    );
}